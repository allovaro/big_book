{"version":3,"sources":["components/Widgets/Statistic/Notification.js","components/Card/MainCard.js","views/ui-elements/basic/BasicButton.js"],"names":["Notification","props","Fragment","variant","message","Link","href","link","target","className","MainCard","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","isOption","title","children","cardClass","optionClass","useState","fullCard","setFullCard","collapseCard","setCollapseCard","loadCard","setloadCard","cardRemove","setCardRemove","windowSize","useWindowSize","mainCardClass","alignRight","Toggle","id","Menu","as","Item","onClick","to","setInterval","Header","Title","position","top","left","right","width","height","join","style","in","Body","BasicButton","buttonVariants","buttonOptions","icon","buttonOnlyIconOptions","basicButtons","map","idx","overlay","outlineButtons","squareButtons","disabledButtons","disabled","roundedButtons","glowButtons","iconButtons","button","outlineIconButtons","onlyIconButtons","onlyOutlineIconButtons","onlyIconRoundedButtons","onlyOutlineIconRoundedButtons","basicDropdownButton","eventKey","splitDropdownButton","Divider","basicOutlineDropdownButton","splitOutlineDropdownButton","basicIconDropdownButton","outlineIconDropdownButton","basicIconDropdownRoundedButton","outlineIconDropdownRoundedButton","sm","md","size","type","defaultValue","value","name","xl","ButtonGroup","vertical"],"mappings":"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","file":"static/js/18.4398b4ff.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport { Dropdown, Card, Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport useWindowSize from '../../hooks/useWindowSize';\n\nconst MainCard = (props) => {\n    const { isOption, title, children, cardClass, optionClass } = props;\n\n    const [fullCard, setFullCard] = useState(false);\n    const [collapseCard, setCollapseCard] = useState(false);\n    const [loadCard, setloadCard] = useState(false);\n    const [cardRemove, setCardRemove] = useState(false);\n\n    const windowSize = useWindowSize();\n\n    const cardReloadHandler = () => {\n        setloadCard(true);\n        setInterval(() => {\n            setloadCard(false);\n        }, 3000);\n    };\n\n    const cardRemoveHandler = () => {\n        setCardRemove(true);\n    };\n\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n    let card = '';\n    let mainCardClass = [];\n\n    if (isOption) {\n        cardHeaderRight = (\n            <div className={'card-header-right ' + optionClass}>\n                <Dropdown alignRight={true} className=\"btn-group card-option\">\n                    <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n                        <i className=\"feather icon-more-horizontal\" />\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n                        <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={() => setFullCard(!fullCard)}>\n                            <i className={fullCard ? 'feather icon-minimize' : 'feather icon-maximize'} />\n                            <Link to=\"#\"> {fullCard ? 'Restore' : 'Maximize'} </Link>\n                        </Dropdown.Item>\n                        <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={() => setCollapseCard(!collapseCard)}>\n                            <i className={collapseCard ? 'feather icon-plus' : 'feather icon-minus'} />\n                            <Link to=\"#\"> {collapseCard ? 'Expand' : 'Collapse'} </Link>\n                        </Dropdown.Item>\n                        <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={cardReloadHandler}>\n                            <i className=\"feather icon-refresh-cw\" />\n                            <Link to=\"#\"> Reload </Link>\n                        </Dropdown.Item>\n                        <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={cardRemoveHandler}>\n                            <i className=\"feather icon-trash\" />\n                            <Link to=\"#\"> Remove </Link>\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        );\n    }\n\n    cardHeader = (\n        <Card.Header>\n            <Card.Title as=\"h5\">{title}</Card.Title>\n            {cardHeaderRight}\n        </Card.Header>\n    );\n\n    if (fullCard) {\n        mainCardClass = [...mainCardClass, 'full-card'];\n        fullScreenStyle = { position: 'fixed', top: 0, left: 0, right: 0, width: windowSize.width, height: windowSize.height };\n    }\n\n    if (loadCard) {\n        mainCardClass = [...mainCardClass, 'card-load'];\n        loader = (\n            <div className=\"card-loader\">\n                <i className=\"pct-loader1 anim-rotate\" />\n            </div>\n        );\n    }\n\n    if (cardRemove) {\n        mainCardClass = [...mainCardClass, 'd-none'];\n    }\n\n    if (cardClass) {\n        mainCardClass = [...mainCardClass, cardClass];\n    }\n\n    card = (\n        <Card className={mainCardClass.join(' ')} style={fullScreenStyle}>\n            {cardHeader}\n            <Collapse in={!collapseCard}>\n                <div>\n                    <Card.Body>{children}</Card.Body>\n                </div>\n            </Collapse>\n            {loader}\n        </Card>\n    );\n\n    return <React.Fragment>{card}</React.Fragment>;\n};\n\nexport default MainCard;\n","import React from 'react';\nimport {\n    Row,\n    Col,\n    Button,\n    OverlayTrigger,\n    Tooltip,\n    ButtonToolbar,\n    ToggleButtonGroup,\n    ToggleButton,\n    Dropdown,\n    DropdownButton,\n    SplitButton,\n    ButtonGroup\n} from 'react-bootstrap';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nimport Card from '../../../components/Card/MainCard';\n\nconst BasicButton = () => {\n    const buttonVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\n    const buttonOptions = [\n        { variant: 'primary', icon: 'feather icon-thumbs-up mx-1' },\n        { variant: 'secondary', icon: 'feather icon-camera mx-1' },\n        { variant: 'success', icon: 'feather icon-check-circle mx-1' },\n        { variant: 'danger', icon: 'feather icon-slash mx-1' },\n        { variant: 'warning', icon: 'feather icon-alert-triangle mx-1' },\n        { variant: 'info', icon: 'feather icon-info mx-1' }\n    ];\n\n    const buttonOnlyIconOptions = [\n        { variant: 'primary', icon: 'feather icon-thumbs-up' },\n        { variant: 'secondary', icon: 'feather icon-camera' },\n        { variant: 'success', icon: 'feather icon-check-circle' },\n        { variant: 'danger', icon: 'feather icon-slash' },\n        { variant: 'warning', icon: 'feather icon-alert-triangle' },\n        { variant: 'info', icon: 'feather icon-info' }\n    ];\n\n    const basicButtons = buttonVariants.map((variant, idx) => (\n        <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\n            <Button variant={variant} className=\"text-capitalize\">\n                {variant}\n            </Button>\n        </OverlayTrigger>\n    ));\n\n    const outlineButtons = buttonVariants.map((variant, idx) => (\n        <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-' + variant}</Tooltip>}>\n            <Button variant={'outline-' + variant} className=\"text-capitalize\">\n                {variant}\n            </Button>\n        </OverlayTrigger>\n    ));\n\n    const squareButtons = buttonVariants.map((variant, idx) => (\n        <Button key={idx} className=\"btn-square text-capitalize\" variant={variant}>\n            {variant}\n        </Button>\n    ));\n    const disabledButtons = buttonVariants.map((variant, idx) => (\n        <Button key={idx} disabled variant={variant} className=\"text-capitalize\">\n            {variant}\n        </Button>\n    ));\n    const roundedButtons = buttonVariants.map((variant, idx) => (\n        <Button key={idx} className=\"btn-rounded text-capitalize\" variant={variant}>\n            {variant}\n        </Button>\n    ));\n\n    const glowButtons = buttonVariants.map((variant, idx) => (\n        <OverlayTrigger key={idx} overlay={<Tooltip>{'btn-glow-' + variant}</Tooltip>}>\n            <Button className={'text-capitalize btn-glow-' + variant} variant={variant}>\n                {variant}\n            </Button>\n        </OverlayTrigger>\n    ));\n\n    const iconButtons = buttonOptions.map((button, idx) => (\n        <Button key={idx} variant={button.variant} className=\"text-capitalize\">\n            <i className={button.icon} />\n            {button.variant}\n        </Button>\n    ));\n\n    const outlineIconButtons = buttonOptions.map((button, idx) => (\n        <Button key={idx} variant={'outline-' + button.variant} className=\"text-capitalize\">\n            <i className={button.icon} />\n            {button.variant}\n        </Button>\n    ));\n\n    const onlyIconButtons = buttonOnlyIconOptions.map((button, idx) => (\n        <Button className=\"btn-icon\" key={idx} variant={button.variant}>\n            <i className={button.icon} />\n        </Button>\n    ));\n\n    const onlyOutlineIconButtons = buttonOnlyIconOptions.map((button, idx) => (\n        <Button className=\"btn-icon\" key={idx} variant={'outline-' + button.variant}>\n            <i className={button.icon} />\n        </Button>\n    ));\n\n    const onlyIconRoundedButtons = buttonOnlyIconOptions.map((button, idx) => (\n        <Button className=\"btn-icon btn-rounded\" key={idx} variant={button.variant}>\n            <i className={button.icon} />\n        </Button>\n    ));\n\n    const onlyOutlineIconRoundedButtons = buttonOnlyIconOptions.map((button, idx) => (\n        <Button className=\"btn-icon btn-rounded\" key={idx} variant={'outline-' + button.variant}>\n            <i className={button.icon} />\n        </Button>\n    ));\n\n    const basicDropdownButton = buttonOptions.map((button) => {\n        const title = button.variant;\n        return (\n            <DropdownButton\n                className=\"text-capitalize\"\n                title={title}\n                variant={button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const splitDropdownButton = buttonOptions.map((button) => {\n        const title = button.variant;\n        return (\n            <SplitButton\n                title={title}\n                variant={button.variant}\n                id={`dropdown-split-variants-${button.variant}`}\n                key={button.variant}\n                className=\"mr-2 mb-2 text-capitalize\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n            </SplitButton>\n        );\n    });\n\n    const basicOutlineDropdownButton = buttonOptions.map((button) => {\n        const title = button.variant;\n        return (\n            <DropdownButton\n                title={title}\n                variant={'outline-' + button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"text-capitalize\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const splitOutlineDropdownButton = buttonOptions.map((button) => {\n        const title = button.variant;\n        return (\n            <SplitButton\n                title={title}\n                variant={'outline-' + button.variant}\n                id={`dropdown-split-variants-${button.variant}`}\n                key={button.variant}\n                className=\"mr-2 mb-2 text-capitalize\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n            </SplitButton>\n        );\n    });\n\n    const basicIconDropdownButton = buttonOnlyIconOptions.map((button) => {\n        const title = <i className={button.icon} />;\n        return (\n            <DropdownButton\n                title={title}\n                variant={button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"drp-icon\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const outlineIconDropdownButton = buttonOnlyIconOptions.map((button) => {\n        const title = <i className={button.icon} />;\n        return (\n            <DropdownButton\n                title={title}\n                variant={'outline-' + button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"drp-icon\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const basicIconDropdownRoundedButton = buttonOnlyIconOptions.map((button) => {\n        const title = <i className={button.icon} />;\n        return (\n            <DropdownButton\n                title={title}\n                variant={button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"drp-icon btn-rounded\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const outlineIconDropdownRoundedButton = buttonOnlyIconOptions.map((button) => {\n        const title = <i className={button.icon} />;\n        return (\n            <DropdownButton\n                title={title}\n                variant={'outline-' + button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"drp-icon btn-rounded\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://react-bootstrap.github.io/components/buttons/\"\n                    />\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col>\n                    <Card title=\"Default\">\n                        {basicButtons}\n                        <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\n                            <Button variant=\"link\">Link</Button>\n                        </OverlayTrigger>\n                    </Card>\n                    <Card title=\"Outline\">{outlineButtons}</Card>\n                    <Card title=\"Square Button\">{squareButtons}</Card>\n                    <Card title=\"Disabled Button\">{disabledButtons}</Card>\n                    <Card title=\"Rounded Button\">{roundedButtons}</Card>\n                    <Card title=\"Glow Button\">{glowButtons}</Card>\n                    <Card title=\"Shadow Button\">\n                        <OverlayTrigger overlay={<Tooltip>shadow-1</Tooltip>}>\n                            <Button className=\"shadow-1\" variant=\"primary\">\n                                Shadow 1\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip>shadow-2</Tooltip>}>\n                            <Button className=\"shadow-2\" variant=\"success\">\n                                Shadow 2\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip>shadow-3</Tooltip>}>\n                            <Button className=\"shadow-3\" variant=\"danger\">\n                                Shadow 3\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip>shadow-4</Tooltip>}>\n                            <Button className=\"shadow-4\" variant=\"warning\">\n                                Shadow 4\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip>shadow-5</Tooltip>}>\n                            <Button className=\"shadow-5\" variant=\"info\">\n                                Shadow 5\n                            </Button>\n                        </OverlayTrigger>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col md={6}>\n                    <Card title=\"Sizes [ Large ]\">\n                        <Button variant=\"primary\" size=\"lg\">\n                            Large Button\n                        </Button>\n                        <Button variant=\"secondary\" size=\"lg\">\n                            Large Button\n                        </Button>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Sizes [ Small ]\">\n                        <Button variant=\"primary\" size=\"sm\">\n                            Small Button\n                        </Button>\n                        <Button variant=\"secondary\" size=\"sm\">\n                            Small Button\n                        </Button>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Checkbox Button\">\n                        <ButtonToolbar>\n                            <ToggleButtonGroup type=\"checkbox\" defaultValue={1}>\n                                <ToggleButton variant=\"secondary\" value={1}>\n                                    Checkbox\n                                </ToggleButton>\n                                <ToggleButton variant=\"secondary\" value={2}>\n                                    Checkbox\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Radio Button\">\n                        <ButtonToolbar>\n                            <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n                                <ToggleButton variant=\"secondary\" value={1}>\n                                    Active\n                                </ToggleButton>\n                                <ToggleButton variant=\"secondary\" value={2}>\n                                    Radio\n                                </ToggleButton>\n                                <ToggleButton variant=\"secondary\" value={3}>\n                                    Radio\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Button With Icon\">{iconButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Outline Icon Buttons\">{outlineIconButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Only Icon\">{onlyIconButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Outline Icon\">{onlyOutlineIconButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Icon Button Rounded\">{onlyIconRoundedButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Icon Outline Button Rounded\">{onlyOutlineIconRoundedButtons}</Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col>\n                    <Card title=\"Basic Dropdown Button\">\n                        <ButtonToolbar>{basicDropdownButton}</ButtonToolbar>\n                    </Card>\n                    <Card title=\"Split Dropdown Button\">\n                        <ButtonToolbar>{splitDropdownButton}</ButtonToolbar>\n                    </Card>\n                    <Card title=\"Basic Outline Dropdown Button\">\n                        <ButtonToolbar>{basicOutlineDropdownButton}</ButtonToolbar>\n                    </Card>\n                    <Card title=\"Split Outline Dropdown Button\">\n                        <ButtonToolbar>{splitOutlineDropdownButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col md={6}>\n                    <Card title=\"Basic Icon Dropdown\">\n                        <ButtonToolbar>{basicIconDropdownButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Outline Icon Dropdown\">\n                        <ButtonToolbar>{outlineIconDropdownButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Basic Rounded Icon Dropdown\">\n                        <ButtonToolbar>{basicIconDropdownRoundedButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Outline Rounded Icon Dropdown\">\n                        <ButtonToolbar>{outlineIconDropdownRoundedButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Basic Button Group\">\n                        <ButtonGroup aria-label=\"Basic example\">\n                            <Button variant=\"secondary\">Left</Button>\n                            <Button variant=\"secondary\">Middle</Button>\n                            <Button variant=\"secondary\">Right</Button>\n                        </ButtonGroup>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Button Toolbar\">\n                        <ButtonToolbar aria-label=\"Toolbar with button groups\">\n                            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\n                                <Button variant=\"secondary\">1</Button>\n                                <Button variant=\"secondary\">2</Button>\n                                <Button variant=\"secondary\">3</Button>\n                                <Button variant=\"secondary\">4</Button>\n                            </ButtonGroup>\n\n                            <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n                                <Button variant=\"secondary\">5</Button>\n                                <Button variant=\"secondary\">6</Button>\n                                <Button variant=\"secondary\">7</Button>\n                            </ButtonGroup>\n\n                            <ButtonGroup aria-label=\"Third group\">\n                                <Button variant=\"secondary\">8</Button>\n                            </ButtonGroup>\n                        </ButtonToolbar>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col>\n                    <Card title=\"Button Toolbar Size\">\n                        <Row>\n                            <Col xl={4} md={12}>\n                                <p>\n                                    use <code>size=\"lg\"</code> props in component <code>ButtonGroup</code> to get large button toolbar\n                                </p>\n                                <ButtonGroup size=\"lg\">\n                                    <Button variant=\"secondary\">Left</Button>\n                                    <Button variant=\"secondary\">Middle</Button>\n                                    <Button variant=\"secondary\">Right</Button>\n                                </ButtonGroup>\n                            </Col>\n                            <Col xl={4} md={6}>\n                                <p>default toolbar size</p>\n                                <ButtonGroup>\n                                    <Button variant=\"secondary\">Left</Button>\n                                    <Button variant=\"secondary\">Middle</Button>\n                                    <Button variant=\"secondary\">Right</Button>\n                                </ButtonGroup>\n                            </Col>\n                            <Col xl={4} md={6}>\n                                <p>\n                                    use <code>size=\"sm\"</code> props in component <code>ButtonGroup</code> to get small button toolbar\n                                </p>\n                                <ButtonGroup size=\"sm\">\n                                    <Button variant=\"secondary\">Left</Button>\n                                    <Button variant=\"secondary\">Middle</Button>\n                                    <Button variant=\"secondary\">Right</Button>\n                                </ButtonGroup>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col md={6}>\n                    <Card title=\"Nesting\">\n                        <ButtonGroup>\n                            <Button variant=\"secondary\">1</Button>\n                            <Button variant=\"secondary\">2</Button>\n                            <DropdownButton variant=\"secondary\" as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\n                                <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                                <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n                            </DropdownButton>\n                        </ButtonGroup>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Vertical Variation\">\n                        <Row>\n                            <Col>\n                                <ButtonGroup vertical>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        1\n                                    </Button>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        2\n                                    </Button>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        3\n                                    </Button>\n                                </ButtonGroup>\n                            </Col>\n                            <Col>\n                                <ButtonGroup vertical>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        1\n                                    </Button>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        2\n                                    </Button>\n                                    <DropdownButton variant=\"secondary\" as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\n                                        <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                                        <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n                                    </DropdownButton>\n                                </ButtonGroup>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default BasicButton;\n"],"sourceRoot":""}