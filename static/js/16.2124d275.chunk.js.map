{"version":3,"sources":["components/Widgets/Statistic/Notification.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Collapse.js","views/ui-elements/basic/BasicCollapse.js"],"names":["Notification","props","Fragment","variant","message","Link","href","link","target","className","_excluded","CardImg","React","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","_collapseStyles","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","in","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","onEnter","onEntering","onEntered","onExit","onExiting","_ref$dimension","_ref$getDimensionValu","computedDimension","handleEnter","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","Transition","addEndListener","transitionEndListener","role","state","innerProps","cloneElement","BasicCollapse","useState","isBasic","setIsBasic","isMultiTarget","setIsMultiTarget","accordionKey","setAccordionKey","targetHandler","findIndex","item","prevState","filter","sm","onClick","id","map","some","to"],"mappings":"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","file":"static/js/16.2124d275.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"className\", \"children\", \"dimension\", \"getDimensionValue\"];\n\nvar _collapseStyles;\n\nimport classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport Transition, { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  var offset = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n  var value = elem[offset];\n  var margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nvar collapseStyles = (_collapseStyles = {}, _collapseStyles[EXITED] = 'collapse', _collapseStyles[EXITING] = 'collapsing', _collapseStyles[ENTERING] = 'collapsing', _collapseStyles[ENTERED] = 'collapse show', _collapseStyles);\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nvar Collapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$dimension = _ref.dimension,\n      dimension = _ref$dimension === void 0 ? 'height' : _ref$dimension,\n      _ref$getDimensionValu = _ref.getDimensionValue,\n      getDimensionValue = _ref$getDimensionValu === void 0 ? getDefaultDimensionValue : _ref$getDimensionValu,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  /* Compute dimension */\n  var computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  var handleEnter = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = '0';\n    }, onEnter);\n  }, [computedDimension, onEnter]);\n  var handleEntering = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      var scroll = \"scroll\" + computedDimension[0].toUpperCase() + computedDimension.slice(1);\n      elem.style[computedDimension] = elem[scroll] + \"px\";\n    }, onEntering);\n  }, [computedDimension, onEntering]);\n  var handleEntered = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onEntered);\n  }, [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  var handleExit = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = getDimensionValue(computedDimension, elem) + \"px\";\n      triggerBrowserReflow(elem);\n    }, onExit);\n  }, [onExit, getDimensionValue, computedDimension]);\n  var handleExiting = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onExiting);\n  }, [computedDimension, onExiting]);\n  return /*#__PURE__*/React.createElement(Transition // @ts-ignore\n  , _extends({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props, {\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting\n  }), function (state, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'width')\n    }));\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import React, { useState } from 'react';\nimport { Row, Col, Button, Card, Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nconst BasicCollapse = () => {\n    const [isBasic, setIsBasic] = useState(false);\n    const [isMultiTarget, setIsMultiTarget] = useState([]);\n    const [accordionKey, setAccordionKey] = useState(1);\n\n    const targetHandler = (target) => {\n        if (isMultiTarget.findIndex((item) => item === target) > -1) {\n            setIsMultiTarget((prevState) => {\n                return prevState.filter((item) => item !== target);\n            });\n        } else {\n            setIsMultiTarget((prevState) => {\n                return [...prevState, target];\n            });\n        }\n    };\n\n    const multiTargetHandler = () => {\n        const allTarget = ['target1', 'target2'];\n        allTarget.map((target) => targetHandler(target));\n    };\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://react-bootstrap.netlify.app/components/accordion/\"\n                    />\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col sm={12}>\n                    <h5>Basic Collapse</h5>\n                    <hr />\n                    <Card>\n                        <Card.Header>\n                            <Button onClick={() => setIsBasic(!isBasic)} aria-controls=\"basic-collapse\" aria-expanded={isBasic}>\n                                Collapse Link\n                            </Button>\n                            <Button onClick={() => setIsBasic(!isBasic)}>Collapse Button</Button>\n                        </Card.Header>\n                        <Collapse in={isBasic}>\n                            <div id=\"basic-collapse\">\n                                <Card.Body>\n                                    <Card.Text>\n                                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid.\n                                        Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\n                                    </Card.Text>\n                                </Card.Body>\n                            </div>\n                        </Collapse>\n                    </Card>\n                </Col>\n                <Col sm={12}>\n                    <h5>Multiple Targets</h5>\n                    <hr />\n                    <Button\n                        onClick={() => targetHandler('target1')}\n                        aria-controls=\"target1\"\n                        aria-expanded={isMultiTarget.findIndex((item) => item === 'target1') > -1}\n                    >\n                        Toggle first element\n                    </Button>\n                    <Button\n                        onClick={() => targetHandler('target2')}\n                        aria-controls=\"target2\"\n                        aria-expanded={isMultiTarget.findIndex((item) => item === 'target2') > -1}\n                    >\n                        Toggle second element\n                    </Button>\n                    <Button onClick={multiTargetHandler}>Toggle both elements</Button>\n                    <Row>\n                        <Col>\n                            <Card className=\"mt-2\">\n                                <Collapse in={isMultiTarget.some((target) => target === 'target1')}>\n                                    <div id=\"target1\">\n                                        <Card.Header>\n                                            <Card.Title as=\"h5\">First Element</Card.Title>\n                                        </Card.Header>\n                                        <Card.Body>\n                                            <Card.Text>\n                                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad\n                                                squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente\n                                                ea proident.\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </div>\n                                </Collapse>\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card className=\"mt-2\">\n                                <Collapse in={isMultiTarget.some((target) => target === 'target2')}>\n                                    <div id=\"target2\">\n                                        <Card.Header>\n                                            <Card.Title as=\"h5\">Second Element</Card.Title>\n                                        </Card.Header>\n                                        <Card.Body>\n                                            <Card.Text>\n                                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad\n                                                squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente\n                                                ea proident.\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </div>\n                                </Collapse>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col sm={12} className=\"accordion\">\n                    <h5>Accordion Example</h5>\n                    <hr />\n                    <Card className=\"mt-2\">\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                <Link\n                                    to=\"#\"\n                                    onClick={() => setAccordionKey(accordionKey !== 1 ? 1 : 0)}\n                                    aria-controls=\"accordion1\"\n                                    aria-expanded={accordionKey === 1}\n                                >\n                                    Collapsible Group Item #1\n                                </Link>\n                            </Card.Title>\n                        </Card.Header>\n                        <Collapse in={accordionKey === 1}>\n                            <div id=\"accordion1\">\n                                <Card.Body>\n                                    <Card.Text>\n                                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3\n                                        wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\n                                        eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\n                                        assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt\n                                        sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                        farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\n                                        labore sustainable VHS.\n                                    </Card.Text>\n                                </Card.Body>\n                            </div>\n                        </Collapse>\n                    </Card>\n                    <Card className=\"mt-2\">\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                <Link\n                                    to=\"#\"\n                                    onClick={() => setAccordionKey(accordionKey !== 2 ? 2 : 0)}\n                                    aria-controls=\"accordion2\"\n                                    aria-expanded={accordionKey === 2}\n                                >\n                                    Collapsible Group Item #2\n                                </Link>\n                            </Card.Title>\n                        </Card.Header>\n                        <Collapse in={accordionKey === 2}>\n                            <div id=\"accordion2\">\n                                <Card.Body>\n                                    <Card.Text>\n                                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3\n                                        wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\n                                        eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\n                                        assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt\n                                        sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                        farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\n                                        labore sustainable VHS.\n                                    </Card.Text>\n                                </Card.Body>\n                            </div>\n                        </Collapse>\n                    </Card>\n                    <Card className=\"mt-2\">\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                <Link\n                                    to=\"#\"\n                                    onClick={() => setAccordionKey(accordionKey !== 3 ? 3 : 0)}\n                                    aria-controls=\"accordion3\"\n                                    aria-expanded={accordionKey === 3}\n                                >\n                                    Collapsible Group Item #3\n                                </Link>\n                            </Card.Title>\n                        </Card.Header>\n                        <Collapse in={accordionKey === 3}>\n                            <div id=\"accordion3\">\n                                <Card.Body>\n                                    <Card.Text>\n                                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3\n                                        wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\n                                        eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\n                                        assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt\n                                        sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                        farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\n                                        labore sustainable VHS.\n                                    </Card.Text>\n                                </Card.Body>\n                            </div>\n                        </Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default BasicCollapse;\n"],"sourceRoot":""}